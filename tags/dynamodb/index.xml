<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>dynamodb on kimDuBiA</title>
    <link>/tags/dynamodb/</link>
    <description>Recent content in dynamodb on kimDuBiA</description>
    <image>
      <url>%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 25 Aug 2024 22:30:17 +0900</lastBuildDate><atom:link href="/tags/dynamodb/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dynamodb 개념잡기</title>
      <link>/etc/dynamodb/</link>
      <pubDate>Sun, 25 Aug 2024 22:30:17 +0900</pubDate>
      
      <guid>/etc/dynamodb/</guid>
      <description>작성 배경 DynamoDB는 기존 RDBMS에 비해 아래와 같은 장점과 단점이 있는 DBMS로
사용처가 명확하기 때문에 서비스와 DynamoDB가 어울릴지 충분히 검토 후 사용해야 합니다
장점  확장성이 훨씬 뛰어나서 트래픽 급증에도 유연하게 대응할 수 있습니다. 트래픽 예측이 안되는 서비스에 강합니다. 네트워크 이슈만 없다면 항상 낮은 latency를 보장하기 때문에 OLTP를 안정적으로 잘 처리합니다. Key - Value 스토어로 스키마가 유연하고 계층 구조의 데이터를 잘 처리할 수 있습니다.  단점  다른 DynamoDB 간 JOIN이 불가능합니다.</description>
    </item>
    
  </channel>
</rss>
