<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>pgloader on kimDuBiA</title>
    <link>/tags/pgloader/</link>
    <description>Recent content in pgloader on kimDuBiA</description>
    <image>
      <url>%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 05 Oct 2021 23:03:26 +0900</lastBuildDate><atom:link href="/tags/pgloader/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>PostgreSQL migration tool pgloader 사용법</title>
      <link>/postgresql/pg_pgloader/</link>
      <pubDate>Tue, 05 Oct 2021 23:03:26 +0900</pubDate>
      
      <guid>/postgresql/pg_pgloader/</guid>
      <description>pgloader란? csv 같은 File이나 실제 DB로부터 데이터를 읽어와 target postgresql 로 데이터 migration을 지원해주는 툴
아래와 같은 단계로 source DB로 부터 데이터를 읽어와 target DB로 copy 수행
 Fetch meta data and catalogs  ### table, column metadata select c.table_name, t.table_comment, c.column_name, c.column_comment, c.data_type, c.column_type, c.column_default, c.is_nullable, c.extra from information_schema.columns c join information_schema.tables t using(table_schema, table_name) where c.table_schema = &#39;source DB&#39; and t.table_type = &#39;BASE TABLE&#39; ### FK 제약조건 SELECT s.</description>
    </item>
    
  </channel>
</rss>
